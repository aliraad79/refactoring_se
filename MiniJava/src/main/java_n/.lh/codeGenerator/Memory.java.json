{
    "sourceFile": "codeGenerator/Memory.java",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1692097911371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1692097959646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,15 +19,13 @@\n         lastTempIndex = stratTempMemoryAddress;\r\n         lastDataAddress = stratDataMemoryAddress;\r\n     }\r\n \r\n-   public int fetchTemp() {\r\n-    return lastTempIndex;\r\n-}\r\n+    public int getTemp() {\r\n+        lastTempIndex += tempSize;\r\n+        return lastTempIndex - tempSize;\r\n+    }\r\n \r\n-public void incrementTempIndex() {\r\n-    lastTempIndex += tempSize;\r\n-}\r\n     public int getDateAddress() {\r\n         lastDataAddress += dataSize;\r\n         return lastDataAddress - dataSize;\r\n     }\r\n"
                },
                {
                    "date": 1692098373500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,15 @@\n     public int getTemp() {\r\n         lastTempIndex += tempSize;\r\n         return lastTempIndex - tempSize;\r\n     }\r\n+public int fetchTemp() {\r\n+    return lastTempIndex;\r\n+}\r\n \r\n+public void incrementTempIndex() {\r\n+    lastTempIndex += tempSize;\r\n+}\r\n     public int getDateAddress() {\r\n         lastDataAddress += dataSize;\r\n         return lastDataAddress - dataSize;\r\n     }\r\n"
                },
                {
                    "date": 1692098380503,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,96 @@\n+package codeGenerator;\r\n+\r\n+import java.util.ArrayList;\r\n+\r\n+/**\r\n+ * Created by mohammad hosein on 6/27/2015.\r\n+ */\r\n+public class Memory {\r\n+    private ArrayList<_3AddressCode> codeBlock;\r\n+    private int lastTempIndex;\r\n+    private int lastDataAddress;\r\n+    private final int stratTempMemoryAddress = 500;\r\n+    private final int stratDataMemoryAddress = 200;\r\n+    private final int dataSize = 4;\r\n+    private final int tempSize = 4;\r\n+\r\n+    public Memory() {\r\n+        codeBlock = new ArrayList<_3AddressCode>();\r\n+        lastTempIndex = stratTempMemoryAddress;\r\n+        lastDataAddress = stratDataMemoryAddress;\r\n+    }\r\n+\r\n+    public int getTemp() {\r\n+        lastTempIndex += tempSize;\r\n+        return lastTempIndex - tempSize;\r\n+    }\r\n+public int fetchTemp() {\r\n+    \r\n+    return lastTempIndex;\r\n+}\r\n+\r\n+public void incrementTempIndex() {\r\n+    lastTempIndex += tempSize;\r\n+}\r\n+    public int getDateAddress() {\r\n+        lastDataAddress += dataSize;\r\n+        return lastDataAddress - dataSize;\r\n+    }\r\n+\r\n+    public int saveMemory() {\r\n+        codeBlock.add(new _3AddressCode());\r\n+        return codeBlock.size() - 1;\r\n+    }\r\n+\r\n+    public void add3AddressCode(Operation op, Address opr1, Address opr2, Address opr3) {\r\n+        codeBlock.add(new _3AddressCode(op, opr1, opr2, opr3));\r\n+    }\r\n+\r\n+    public void add3AddressCode(int i, Operation op, Address opr1, Address opr2, Address opr3) {\r\n+        codeBlock.remove(i);\r\n+        codeBlock.add(i, new _3AddressCode(op, opr1, opr2, opr3));\r\n+    }\r\n+\r\n+    public int getCurrentCodeBlockAddress() {\r\n+        return codeBlock.size();\r\n+    }\r\n+\r\n+    public void pintCodeBlock() {\r\n+        System.out.println(\"Code Block\");\r\n+        for (int i = 0; i < codeBlock.size(); i++) {\r\n+            System.out.println(i + \" : \" + codeBlock.get(i).toString());\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+class _3AddressCode {\r\n+    public Operation operation;\r\n+    public Address Operand1;\r\n+    public Address Operand2;\r\n+    public Address Operand3;\r\n+\r\n+    public _3AddressCode() {\r\n+\r\n+    }\r\n+\r\n+    public _3AddressCode(Operation op, Address opr1, Address opr2, Address opr3) {\r\n+        operation = op;\r\n+        Operand1 = opr1;\r\n+        Operand2 = opr2;\r\n+        Operand3 = opr3;\r\n+    }\r\n+\r\n+    public String toString() {\r\n+        if (operation == null) return \"\";\r\n+        StringBuffer res = new StringBuffer(\"(\");\r\n+        res.append(operation.toString()).append(\",\");\r\n+        if (Operand1 != null) res.append(Operand1.toString());\r\n+        res.append(\",\");\r\n+        if (Operand2 != null) res.append(Operand2.toString());\r\n+        res.append(\",\");\r\n+        if (Operand3 != null) res.append(Operand3.toString());\r\n+        res.append(\")\");\r\n+\r\n+        return res.toString();\r\n+    }\r\n+}\r\n"
                },
                {
                    "date": 1692098389488,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,14 +19,10 @@\n         lastTempIndex = stratTempMemoryAddress;\r\n         lastDataAddress = stratDataMemoryAddress;\r\n     }\r\n \r\n-    public int getTemp() {\r\n-        lastTempIndex += tempSize;\r\n-        return lastTempIndex - tempSize;\r\n-    }\r\n public int fetchTemp() {\r\n-    \r\n+    incrementTempIndex;\r\n     return lastTempIndex;\r\n }\r\n \r\n public void incrementTempIndex() {\r\n@@ -93,99 +89,4 @@\n \r\n         return res.toString();\r\n     }\r\n }\r\n-package codeGenerator;\r\n-\r\n-import java.util.ArrayList;\r\n-\r\n-/**\r\n- * Created by mohammad hosein on 6/27/2015.\r\n- */\r\n-public class Memory {\r\n-    private ArrayList<_3AddressCode> codeBlock;\r\n-    private int lastTempIndex;\r\n-    private int lastDataAddress;\r\n-    private final int stratTempMemoryAddress = 500;\r\n-    private final int stratDataMemoryAddress = 200;\r\n-    private final int dataSize = 4;\r\n-    private final int tempSize = 4;\r\n-\r\n-    public Memory() {\r\n-        codeBlock = new ArrayList<_3AddressCode>();\r\n-        lastTempIndex = stratTempMemoryAddress;\r\n-        lastDataAddress = stratDataMemoryAddress;\r\n-    }\r\n-\r\n-    public int getTemp() {\r\n-        lastTempIndex += tempSize;\r\n-        return lastTempIndex - tempSize;\r\n-    }\r\n-public int fetchTemp() {\r\n-    return lastTempIndex;\r\n-}\r\n-\r\n-public void incrementTempIndex() {\r\n-    lastTempIndex += tempSize;\r\n-}\r\n-    public int getDateAddress() {\r\n-        lastDataAddress += dataSize;\r\n-        return lastDataAddress - dataSize;\r\n-    }\r\n-\r\n-    public int saveMemory() {\r\n-        codeBlock.add(new _3AddressCode());\r\n-        return codeBlock.size() - 1;\r\n-    }\r\n-\r\n-    public void add3AddressCode(Operation op, Address opr1, Address opr2, Address opr3) {\r\n-        codeBlock.add(new _3AddressCode(op, opr1, opr2, opr3));\r\n-    }\r\n-\r\n-    public void add3AddressCode(int i, Operation op, Address opr1, Address opr2, Address opr3) {\r\n-        codeBlock.remove(i);\r\n-        codeBlock.add(i, new _3AddressCode(op, opr1, opr2, opr3));\r\n-    }\r\n-\r\n-    public int getCurrentCodeBlockAddress() {\r\n-        return codeBlock.size();\r\n-    }\r\n-\r\n-    public void pintCodeBlock() {\r\n-        System.out.println(\"Code Block\");\r\n-        for (int i = 0; i < codeBlock.size(); i++) {\r\n-            System.out.println(i + \" : \" + codeBlock.get(i).toString());\r\n-        }\r\n-    }\r\n-}\r\n-\r\n-class _3AddressCode {\r\n-    public Operation operation;\r\n-    public Address Operand1;\r\n-    public Address Operand2;\r\n-    public Address Operand3;\r\n-\r\n-    public _3AddressCode() {\r\n-\r\n-    }\r\n-\r\n-    public _3AddressCode(Operation op, Address opr1, Address opr2, Address opr3) {\r\n-        operation = op;\r\n-        Operand1 = opr1;\r\n-        Operand2 = opr2;\r\n-        Operand3 = opr3;\r\n-    }\r\n-\r\n-    public String toString() {\r\n-        if (operation == null) return \"\";\r\n-        StringBuffer res = new StringBuffer(\"(\");\r\n-        res.append(operation.toString()).append(\",\");\r\n-        if (Operand1 != null) res.append(Operand1.toString());\r\n-        res.append(\",\");\r\n-        if (Operand2 != null) res.append(Operand2.toString());\r\n-        res.append(\",\");\r\n-        if (Operand3 != null) res.append(Operand3.toString());\r\n-        res.append(\")\");\r\n-\r\n-        return res.toString();\r\n-    }\r\n-}\r\n"
                },
                {
                    "date": 1692098823614,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,18 +75,15 @@\n         Operand2 = opr2;\r\n         Operand3 = opr3;\r\n     }\r\n \r\n-    public String toString() {\r\n-        if (operation == null) return \"\";\r\n-        StringBuffer res = new StringBuffer(\"(\");\r\n-        res.append(operation.toString()).append(\",\");\r\n-        if (Operand1 != null) res.append(Operand1.toString());\r\n-        res.append(\",\");\r\n-        if (Operand2 != null) res.append(Operand2.toString());\r\n-        res.append(\",\");\r\n-        if (Operand3 != null) res.append(Operand3.toString());\r\n-        res.append(\")\");\r\n+public String toString() {\r\n+    if (operation == null) return \"\";\r\n \r\n-        return res.toString();\r\n-    }\r\n+    String operationString = operation.toString();\r\n+    String operand1String = (Operand1 != null) ? Operand1.toString() : \"\";\r\n+    String operand2String = (Operand2 != null) ? Operand2.toString() : \"\";\r\n+    String operand3String = (Operand3 != null) ? Operand3.toString() : \"\";\r\n+\r\n+    return \"(\" + operationString + \",\" + operand1String + \",\" + operand2String + \",\" + operand3String + \")\";\r\n }\r\n+}\r\n"
                }
            ],
            "date": 1692097911371,
            "name": "Commit-0",
            "content": "package codeGenerator;\r\n\r\nimport java.util.ArrayList;\r\n\r\n/**\r\n * Created by mohammad hosein on 6/27/2015.\r\n */\r\npublic class Memory {\r\n    private ArrayList<_3AddressCode> codeBlock;\r\n    private int lastTempIndex;\r\n    private int lastDataAddress;\r\n    private final int stratTempMemoryAddress = 500;\r\n    private final int stratDataMemoryAddress = 200;\r\n    private final int dataSize = 4;\r\n    private final int tempSize = 4;\r\n\r\n    public Memory() {\r\n        codeBlock = new ArrayList<_3AddressCode>();\r\n        lastTempIndex = stratTempMemoryAddress;\r\n        lastDataAddress = stratDataMemoryAddress;\r\n    }\r\n\r\n   public int fetchTemp() {\r\n    return lastTempIndex;\r\n}\r\n\r\npublic void incrementTempIndex() {\r\n    lastTempIndex += tempSize;\r\n}\r\n    public int getDateAddress() {\r\n        lastDataAddress += dataSize;\r\n        return lastDataAddress - dataSize;\r\n    }\r\n\r\n    public int saveMemory() {\r\n        codeBlock.add(new _3AddressCode());\r\n        return codeBlock.size() - 1;\r\n    }\r\n\r\n    public void add3AddressCode(Operation op, Address opr1, Address opr2, Address opr3) {\r\n        codeBlock.add(new _3AddressCode(op, opr1, opr2, opr3));\r\n    }\r\n\r\n    public void add3AddressCode(int i, Operation op, Address opr1, Address opr2, Address opr3) {\r\n        codeBlock.remove(i);\r\n        codeBlock.add(i, new _3AddressCode(op, opr1, opr2, opr3));\r\n    }\r\n\r\n    public int getCurrentCodeBlockAddress() {\r\n        return codeBlock.size();\r\n    }\r\n\r\n    public void pintCodeBlock() {\r\n        System.out.println(\"Code Block\");\r\n        for (int i = 0; i < codeBlock.size(); i++) {\r\n            System.out.println(i + \" : \" + codeBlock.get(i).toString());\r\n        }\r\n    }\r\n}\r\n\r\nclass _3AddressCode {\r\n    public Operation operation;\r\n    public Address Operand1;\r\n    public Address Operand2;\r\n    public Address Operand3;\r\n\r\n    public _3AddressCode() {\r\n\r\n    }\r\n\r\n    public _3AddressCode(Operation op, Address opr1, Address opr2, Address opr3) {\r\n        operation = op;\r\n        Operand1 = opr1;\r\n        Operand2 = opr2;\r\n        Operand3 = opr3;\r\n    }\r\n\r\n    public String toString() {\r\n        if (operation == null) return \"\";\r\n        StringBuffer res = new StringBuffer(\"(\");\r\n        res.append(operation.toString()).append(\",\");\r\n        if (Operand1 != null) res.append(Operand1.toString());\r\n        res.append(\",\");\r\n        if (Operand2 != null) res.append(Operand2.toString());\r\n        res.append(\",\");\r\n        if (Operand3 != null) res.append(Operand3.toString());\r\n        res.append(\")\");\r\n\r\n        return res.toString();\r\n    }\r\n}\r\n"
        }
    ]
}